<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="casa5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADQAAAAyCAYAAAATIfj2AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        cQAAEnEB89x6jgAABC1JREFUaEPtmUsofG8Yxy3YWNhYUCQiJEIukTuRRIhIIlHKQlEWbBALForCglxy
        CxGRS0SIiHIrRYhEKQsLysbi+fd9mvM2M81wZuYczf/X+dZT5nzf22fe572c4UD/mDQge9efAH1/f1NL
        Swt9fn7qnqgn1YEAU1hYSA4ODhQfH686lKpADw8PVFFRwTBS5Ofn0/n5ua6E8lIN6O7ujsrKygxgpMjN
        zaXT01NdSWWlChDSCumlD2H8OTAwkF5fX3U1lJPiQKZg6urq2Ovu7jZ4rgaUokAXFxdUUFBgMOimpib6
        +vrSlSDq7OwkZ2dn4aenp9P+/r7OtV2KAWFNYG3owzQ3N/MuB01MTIi/u7q6yMXFRZRLTU2l3d1d9myV
        IkAnJyeUnZ0tBujk5ERtbW06lzjl8BzbtwTV09NDrq6uok5SUhJtb2+zZ4tsBjo8PKTMzEwxMKRTR0cH
        e0i1xsZG4SFqamrEuunr6yM3NzfhYe1tbm6yZ61sAkLuYw1IA0IaIZ2gj48PamhoEJ5+VFdX08vLC5cb
        GBggDw8P4cXGxtL6+jp71shqoJ2dHc59aSBIH6QR9P7+TvX19cIzFVVVVfT09MTlh4eHydvbW3jR0dG0
        srLCnqWyCmhra4sSExPFANzd3am/v5+9t7c3qq2tFd5PgVsEbhPQ2NgY+fn5CS8iIoKWlpbYs0QWA21s
        bFBcXJzo2NPTkwYHB9nD2sAakTw5gdvE7e0t15+amuKzSfLCwsJoYWGBPbmyCGh1dZViYmJEhz4+PjQy
        MsLe8/Mzrw3JsyRKSkro+vqa25mdnaXg4GDhhYSE0NzcHHtyJBtoeXmZIiMjRUf+/v58tkCPj49UWVkp
        PGuiqKiIrq6uuD3MCmZH8oKCgmhmZoa93yQLaHFxkcLDww06mJ6eZu/+/p7Ky8uFZ0vglnF5ecnt4guM
        iooSXkBAAKfkb/oVCNONaZcaDg0Npfn5efZubm6otLRUeEpEXl4enZ2dcftra2u8jUseNo3x8XH2zOlH
        IEwzZkNqECkn7TxIj+LiYuEpGTk5OXz7gHDQJiQkCA/rdnR0lD1TMgs0OTnJ0yw1hM0AmwKEtDC+hCod
        WVlZdHR0xP3hzEtJSRGel5cXDQ0NsWcsk0A4E3x9fUUD+IakK4mpS6hakZGRQQcHB9wvbiX4LHm4XeCW
        YSyTQL29veTo6MgVcS7g7RM6Pj42uIT+RaSlpdHe3h73j3NO/5xqb2/n5/oym3LY2bBm9F/A/hpGCvQr
        CePBOSUdGcb6cVMwVnJysskO1Q6cSXKlKhAunKhjHPoXUTmBOnKlKhB+XDQl498Wfgu7mSENyExoQHKl
        Af1rQK2trbqahtKANCCZ0oA0INOhGhB+dAeU3DD3qoznpsqbC+n/S3JkEdD/QRqQvUsDsndpQPYuDci+
        RfQfv7w9C6AQ5bYAAAAASUVORK5CYII=
</value>
  </data>
</root>